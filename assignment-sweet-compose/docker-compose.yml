version: "2.4"

services:
  redis:
    image: redis:alpine
    networks:
      - frontend
    healthcheck:
      test: redis-cli ping

  db:
    image: postgres:9.6
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1

  vote:
    image: bretfisher/examplevotingapp_vote
    ports:
      - "5000:80"
    networks:
      - frontend
      - proxy
    depends_on:
      redis:
        condition: service_healthy
    # labels:
    #   - traefik.port=80
    #   - traefik.frontend.rule=Host:vote.localhost
    environment:
      - VIRTUAL_HOST=vote.localhost

  result:
    build:
      context: result
    ports:
      - "5001:80"
      - "9229:9229"
    networks:
      - backend
      - proxy
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./result:/app
    # labels:
    #   - traefik.port=80
    #   - traefik.frontend.rule=Host:result.localhost
    environment:
      - VIRTUAL_HOST=result.localhost
      - NODE_ENV=development
      - DEBUG=true
    command: nodemon --inspect=0.0.0.0:9229 /app/server.js

  worker:
    image: bretfisher/examplevotingapp_worker:java
    networks:
      - frontend
      - backend
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    environment:
      - DHPARAM_GENERATION=false
    networks:
      - proxy
  # traefik:
  #   image: traefik:1.7-alpine
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   ports:
  #     - "80:80"
  #   command:
  #     - --docker
  #     - --docker.domain=traefik
  #     - --docker.watch
  #     - --api
  #     - --defaultentrypoints=http,https
  #   labels:
  #     - traefik.port=8080
  #     - traefik.frontend.rule=Host:traefik.localhost
  #   networks:
  #     - frontend
  #     - backend
networks:
  frontend:
  backend:
  proxy:

volumes:
  db-data:
